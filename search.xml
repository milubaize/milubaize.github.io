<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Java从零开始]]></title>
      <url>/2017/11/05/Java%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/</url>
      <content type="html"><![CDATA[<p>最近一直不在学习状态，决定恶补Java 基础</p>
<h2 id="1-什么是面向对象编程"><a href="#1-什么是面向对象编程" class="headerlink" title="1. 什么是面向对象编程"></a>1. 什么是面向对象编程</h2><p> 说到面向对象，就要提起面向过程，那么它们有什么区别呢？</p>
<h3 id="1-1-面向过程"><a href="#1-1-面向过程" class="headerlink" title="1.1 面向过程"></a>1.1 面向过程</h3><p> 概念:分析解决问题的所需要的步骤，然后用函数一步一步的调用实现，就是把一个事务分解成一个个步骤。</p>
<p>例如：把大象放入冰箱这件事情</p>
<blockquote>
<p>1.打开冰箱</p>
<p>2.放入大象</p>
<p>3.关闭冰箱</p>
</blockquote>
<p>这就是<code>面向过程</code>编程，思想是注重做事的过程。</p>
<h3 id="1-2-面向对象"><a href="#1-2-面向对象" class="headerlink" title="1.2 面向对象"></a>1.2 面向对象</h3><p>概念:<code>OOP（Object Oriented Programming）</code>面向对象关注的是哪些事物有什么样的功能，强调的是具体的事物</p>
<p>例如：同样的把大象放入冰箱这件事情</p>
<p>分析：会抽象出一类具有某种相同属性和行为的事物</p>
<blockquote>
<p><code>冰箱</code>：具体功能有开冰箱，关闭冰箱</p>
<p><code>大象</code>：走路</p>
</blockquote>
<p>同一件事，面向对象关注的是谁有打开冰箱关闭冰箱的功能，谁有进入冰箱的功能。</p>
<p>总结：<font color="#F08080" size=""></font></p>
<p>面向对象是以功能来划分，而不是步骤。</p>
<p>编程就是模拟现实生活，我们使用面向对象的思想可以认为<code>万物皆对象</code>。<br>  <br>  </p>
<h2 id="2-类的概念"><a href="#2-类的概念" class="headerlink" title="2. 类的概念"></a>2. 类的概念</h2><p>在Java中，我们把具有相同属性或者行为的事物抽象成一类。比如猫是一类，是一个概念，并没有具体指某只猫，类中一个具体的对象可以是波斯猫，折耳猫等等</p>
<p>类和对象的关系：就像是模版和样本的关系，通过一个模板可以创建多个当前模板下的样例。</p>
<blockquote>
<font color="#F08080" size="">注意：类是概念，对象才是真正的实例。</font>

</blockquote>
<p><br><br>定义类的语法：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">class 类名&#123;</div><div class="line"></div><div class="line">	属性</div><div class="line"></div><div class="line">	方法()</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>我们可以根据类来创建对象<br>创建对象的语法：</p>
<blockquote>
<p>类名 变量名 = new 类名();</p>
</blockquote>
<p>用代码来说明一下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">class Cat&#123;</div><div class="line">  /**</div><div class="line">     定义猫这个类</div><div class="line">    */</div><div class="line">  double weight;</div><div class="line"></div><div class="line">  double height;</div><div class="line"></div><div class="line">  String name;</div><div class="line"></div><div class="line">/**</div><div class="line">   定义猫类的方法</div><div class="line">  */</div><div class="line"></div><div class="line">  public void <span class="function"><span class="title">sleep</span></span>()&#123;</div><div class="line">      System.out.println(name+<span class="string">"在睡觉"</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/**</div><div class="line">	创建测试类</div><div class="line">*/</div><div class="line"></div><div class="line">class <span class="built_in">test</span>&#123;</div><div class="line">    public static void main(String[] args)&#123;</div><div class="line">    </div><div class="line">    //创建一个Dog类的对象</div><div class="line">    Cat cat =new Cat(); </div><div class="line">    </div><div class="line">    //根据对象变量.属性就可以获得或者设置属性的值</div><div class="line">    cat.name=<span class="string">"小花"</span>;</div><div class="line"></div><div class="line">    System.out.println(<span class="string">"猫的名字："</span>+cat.name);</div><div class="line"></div><div class="line">    //通过cat对象调用它的方法</div><div class="line">    cat.sleep();</div><div class="line"> &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Java 基础 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Next主题优化]]></title>
      <url>/2017/11/03/Next%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/</url>
      <content type="html"><![CDATA[<h2 id="1-Hexo之next主题设置首页不显示全文-只显示预览"><a href="#1-Hexo之next主题设置首页不显示全文-只显示预览" class="headerlink" title="1. Hexo之next主题设置首页不显示全文(只显示预览)"></a>1. Hexo之next主题设置首页不显示全文(只显示预览)</h2><ul>
<li>入hexo博客项目的themes/next目录</li>
<li>用文本编辑器打开_config.yml文件</li>
<li>搜索”auto_excerpt”,找到如下部分：</li>
</ul>
<blockquote>
<p># Automatically Excerpt. Not recommand.<br># Please use <code>&lt;!-- more --&gt;</code> in the post &gt; to control excerpt accurately.<br>   auto_excerpt:<br>   enable: false<br>   length: 150<br> <a id="more"></a></p>
</blockquote>
<ul>
<li>把enable改为对应的false改为true就完成了</li>
</ul>
<p><font color="#F08080" size="">注：下面的length参数对应的是文章预览的文本长度，可以自己设置。</font>  <br>  </p>
<h2 id="2-头像设置"><a href="#2-头像设置" class="headerlink" title="2. 头像设置"></a>2. 头像设置</h2><p>编辑 站点配置文件，新增字段 avatar， 值设置成头像的链接地址。</p>
<blockquote>
<p>avatar: <a href="http://xxxx.jpg" target="_blank" rel="external">http://xxxx.jpg</a></p>
</blockquote>
<h2 id="3-添加页面"><a href="#3-添加页面" class="headerlink" title="3. 添加页面"></a>3. 添加页面</h2><p>添加<code>关于</code>页面</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page <span class="string">"about"</span></div></pre></td></tr></table></figure>
<p>在source文件夹下就会有about文件夹，编辑index.md，然后进入主题的_config.yml中，menu下的#about注释去掉.</p>
]]></content>
      
        <categories>
            
            <category> Hexo主题相关 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[学习Markdown]]></title>
      <url>/2017/10/31/MyBlog/</url>
      <content type="html"><![CDATA[<h1 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h1><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字。<br><a id="more"></a></p>
<h2 id="一-标题"><a href="#一-标题" class="headerlink" title="一.标题"></a>一.标题</h2><p>这是最为常用的格式，在平时常用的的文本编辑器中大多是这样实现的：输入文本、选中文本、设置标题格式。</p>
<p>而在 Markdown 中，你只需要在文本前面加上 # 即可，同理、你还可以增加二级标题、三级标题、四级标题、五级标题和六级标题，总共六级，只需要增加 # 即可，标题字号相应降低。例如：</p>
<p>代码：</p>
<pre><code># 第一级标题   `&lt;h1&gt;`
## 第二级标题    `&lt;h2&gt;`
### 第三级标题     `&lt;h3&gt;`
</code></pre><p> 效果：</p>
<blockquote>
<h1 id="第一级标题-lt-h1-gt"><a href="#第一级标题-lt-h1-gt" class="headerlink" title="第一级标题   &lt;h1&gt;"></a>第一级标题   <code>&lt;h1&gt;</code></h1><h2 id="第二级标题-lt-h2-gt"><a href="#第二级标题-lt-h2-gt" class="headerlink" title="第二级标题   &lt;h2&gt;"></a>第二级标题   <code>&lt;h2&gt;</code></h2><h3 id="第三级标题-lt-h3-gt"><a href="#第三级标题-lt-h3-gt" class="headerlink" title="第三级标题    &lt;h3&gt;"></a>第三级标题    <code>&lt;h3&gt;</code></h3></blockquote>
<h2 id="二-引用"><a href="#二-引用" class="headerlink" title="二.引用"></a>二.引用</h2><p>引用需要在被引用的文本前加上&gt;符号。</p>
<p>代码：</p>
<pre><code>&gt; 第一行   
&gt; 第二行    
&gt; 第三行     
</code></pre><p> 效果：</p>
<blockquote>
<p> 第一行  </p>
<p> 第二行   </p>
<p> 第三行   </p>
</blockquote>
<h3 id="引用的多层嵌套"><a href="#引用的多层嵌套" class="headerlink" title="引用的多层嵌套"></a>引用的多层嵌套</h3><p>代码：</p>
<pre><code>&gt;&gt;&gt; 请问 Markdwon 怎么用啊？  
&gt;&gt;
&gt;&gt; 自己看百度！ 
&gt;
&gt; 第一行     
</code></pre><p><font color="#F08080" size="2">注：此处代码部分加\转义可以让符号原样显示，不被解析成对应的markdown语法</font>  <br><br>效果：</p>
<blockquote>
<blockquote>
<blockquote>
<p>请问 Markdwon 怎么用啊？  </p>
</blockquote>
<p>自己看百度！ </p>
</blockquote>
<p>不会啊！ </p>
</blockquote>
<h3 id="代码高亮着色"><a href="#代码高亮着色" class="headerlink" title="代码高亮着色"></a>代码高亮着色</h3><p>使用 \<figure class="highlight bash"><figcaption><span>.....```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">  </div><div class="line">效果</div><div class="line"></div><div class="line">``` bash</div><div class="line">$ hexo d -g</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Markdown基础 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/10/31/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a><br><a id="more"></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
